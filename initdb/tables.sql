BEGIN;

SET client_encoding = 'UTF8';

CREATE TABLE notes (
    id bigint generated by default as identity primary key,
    note_id text NOT NULL,
    title text NOT NULL,
    body text NOT NULL,
    tags text [],
    parent_id text NOT NULL,
    order_id bigint NULL,
    is_todo boolean NOT NULL,
    todo_due boolean NOT NULL,
    todo_completed boolean NOT NULL,
    created_time bigint NOT NULL
);

CREATE TABLE tags (
    id bigint generated by default as identity primary key,
    tag_id text NOT NULL,
    tag text NOT NULL,
    created_time timestamp default current_timestamp
);

CREATE TABLE folders (
    id bigint generated by default as identity primary key,
    folder_id text NOT NULL,
    title text NOT NULL,
    icon text NOT NULL,
    user_updated_time bigint NOT NULL,
    created_time timestamp default current_timestamp
);

CREATE TABLE movies(
	ReleaseYear int,
	Title text,
	Origin text,
	Director text,
	Casting text,
	Genre text,
	WikiPage text,
	Plot text
);

CREATE TABLE beers(
    title text,
    alchool text,
    description text,
    country text
);

CREATE TABLE subscribers (
    id bigint generated by default as identity primary key,
    email text NOT NULL,
    created_time timestamp default current_timestamp
);

CREATE OR REPLACE FUNCTION your_trigger_function() RETURNS TRIGGER AS $$
DECLARE
  payload JSON;
BEGIN

    payload := json_build_object(
        'email', NEW.email
    );

    PERFORM pg_notify('record_inserted', payload::TEXT);
  
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER your_trigger_name
AFTER INSERT ON subscribers
FOR EACH ROW
EXECUTE FUNCTION your_trigger_function();

COMMIT;

